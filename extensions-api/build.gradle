apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'com.jfrog.artifactory'

description 'Corda Extensions API'

dependencies {

    compile project(":core")
    compile project(":node-api")
    compile project(":client:rpc") // for PermissionException which is part of public API interface.

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Required by JVMAgentUtil (x-compatible java 8 & 11 agent lookup mechanism)
    if (JavaVersion.current().isJava8Compatible())
        compile files("${System.properties['java.home']}/../lib/tools.jar")

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit_jupiter_version}"
    testImplementation "junit:junit:$junit_version"

    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${junit_vintage_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit_jupiter_version}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:${junit_platform_version}"

    // Unit testing helpers.
    testCompile "org.assertj:assertj-core:$assertj_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile project(':test-utils')
}

configurations {
    testArtifacts.extendsFrom testRuntimeClasspath
}

jar {
    archiveBaseName = 'corda-extensions-api'
    archiveClassifier = jdkClassifier
}

task testJar(type: Jar) {
    classifier "tests"
    from sourceSets.test.output
}

artifacts {
    testArtifacts testJar
}

publish {
    name jar.archiveBaseName.get()
}